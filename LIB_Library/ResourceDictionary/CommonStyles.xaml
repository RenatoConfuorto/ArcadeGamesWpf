<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:MarkupExtensions="clr-namespace:Core.MarkupExtensions;assembly=Core"
                    xmlns:UserControls="clr-namespace:LIB.UserControls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Core;component/ResourceDictionary/CommonStyles.xaml"/>
        <ResourceDictionary Source="/LIB_Library;component/ResourceDictionary/CommonColors.xaml"/>
        <ResourceDictionary Source="/LIB_Library;component/ResourceDictionary/Geometries.xaml"/>
        <ResourceDictionary Source="/LIB_Library;component/ResourceDictionary/ValueConverters.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <FontFamily x:Key="PressStartP2P">/pack://application:,,,/LIB_Library;component/Fonts/#Press Start 2P Regular</FontFamily>
    
    <Style TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="{StaticResource PressStartP2P}"/>
        <Setter Property="Background" Value="{StaticResource BgColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
    </Style>
    <Style TargetType="Image">
        <Setter Property="MaxWidth" Value="600"/>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource BgColorLight}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource PressStartP2P}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Padding" Value="8 4"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="2"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="Margin" Value="4 2"/>
        <Setter Property="Padding" Value="4 6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                <Setter Property="CornerRadius" Value="2"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="{StaticResource accentColorDark}" BlurRadius="20" Direction="0" ShadowDepth="3" Opacity="0.7" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource AccentColorDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="NavigationButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{MarkupExtensions:EmFontSize 1.8}"/>
        <Setter Property="Padding" Value="18 9"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BgColor}"/>
                <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Transparent" BlurRadius="0" Direction="0" ShadowDepth="0" Opacity="0" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource BgColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Grid" x:Key="GameBoard">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <!--<Setter Property="Margin" Value="30 15 30 0"/>-->
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="GameTitle">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Margin" Value="4 16"/>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="GameDesc">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="8 16"/>
        <Setter Property="LineHeight" Value="24"/>
    </Style>

    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Margin" Value="0 3"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="Padding" Value="0 2"/>
        <Setter Property="Background" Value="{StaticResource BgColorLight}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Margin" Value="0 15"/>
        <Style.Resources>

            <Style TargetType="GridViewColumnHeader">
                <Setter Property="Background" Value="{StaticResource BgColor}"/>
                <Setter Property="Padding" Value="10 8"/>
                <Setter Property="IsEnabled" Value="False"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource BgColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="IsHitTestVisible" Value="False"/>
            </Style>

        </Style.Resources>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Padding" Value="4 0"/>
        <Setter Property="CaretBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="bg" BorderBrush="{StaticResource BorderColor}" BorderThickness="1" CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="#FFFFFF"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="#FFFFFF"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                <Setter Property="CornerRadius" Value="6"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="ProgressBar" x:Key="PlayerTimer">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{Binding TimerEnabled, Converter={StaticResource ProgressBarBorderBrushConverter}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Value" Value="{Binding Time}"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="{Binding OriginalTime}"/>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"/>
                        <Border Name="PART_Track" Background="{TemplateBinding Foreground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <Rectangle Name="PART_Indicator" HorizontalAlignment="Left"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="false">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Indicator"
                                                     Storyboard.TargetProperty="Width"
                                                     To="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"/>
                        <Border Name="PART_Track" Background="{TemplateBinding Foreground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <Rectangle Name="PART_Indicator" HorizontalAlignment="Left"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="false">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_Indicator"
                                                     Storyboard.TargetProperty="Width"
                                                     To="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
</ResourceDictionary>