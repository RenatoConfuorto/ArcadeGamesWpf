<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:MarkupExtensions="clr-namespace:Core.MarkupExtensions;assembly=Core"
                    xmlns:UserControls="clr-namespace:LIB.UserControls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Core;component/ResourceDictionary/CommonStyles.xaml"/>
        <ResourceDictionary Source="/LIB_Library;component/ResourceDictionary/CommonColors.xaml"/>
        <ResourceDictionary Source="/LIB_Library;component/ResourceDictionary/Geometries.xaml"/>
        <ResourceDictionary Source="/LIB_Library;component/ResourceDictionary/ValueConverters.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <FontFamily x:Key="PressStartP2P">/pack://application:,,,/LIB_Library;component/Fonts/#Press Start 2P Regular</FontFamily>
    
    <Style TargetType="{x:Type Window}">
        <Setter Property="FontFamily" Value="{StaticResource PressStartP2P}"/>
        <Setter Property="Background" Value="{StaticResource BgColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
    </Style>
    <Style TargetType="Image">
        <Setter Property="MaxWidth" Value="600"/>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource BgColorLight}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource PressStartP2P}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Padding" Value="8 4"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="2"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentColor}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="Margin" Value="4 2"/>
        <Setter Property="Padding" Value="4 6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                <Setter Property="CornerRadius" Value="2"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="{StaticResource accentColorDark}" BlurRadius="20" Direction="0" ShadowDepth="3" Opacity="0.7" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource AccentColorDark}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="NavigationButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="{MarkupExtensions:EmFontSize 1.8}"/>
        <Setter Property="Padding" Value="18 9"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BgColor}"/>
                <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Transparent" BlurRadius="0" Direction="0" ShadowDepth="0" Opacity="0" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource BgColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Grid" x:Key="GameBoard">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <!--<Setter Property="Margin" Value="30 15 30 0"/>-->
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="GameTitle">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Margin" Value="4 16"/>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="GameDesc">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="8 16"/>
        <Setter Property="LineHeight" Value="24"/>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="GamePlayerLabel">
        <Setter Property="Margin" Value="8 16"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Margin" Value="0 3"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="Padding" Value="0 2"/>
        <Setter Property="Background" Value="{StaticResource BgColorLight}"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Margin" Value="0 15"/>
        <Style.Resources>

            <Style TargetType="GridViewColumnHeader">
                <Setter Property="Background" Value="{StaticResource BgColor}"/>
                <Setter Property="Padding" Value="10 8"/>
                <Setter Property="IsEnabled" Value="False"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource BgColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="IsHitTestVisible" Value="False"/>
            </Style>

        </Style.Resources>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Padding" Value="4 0"/>
        <Setter Property="CaretBrush" Value="{StaticResource BorderColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="bg" BorderBrush="{StaticResource BorderColor}" BorderThickness="1" CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="{StaticResource TextColor}"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="bg" Value="{StaticResource TextColor}"/>
                            <Setter Property="BorderThickness" TargetName="bg" Value="2"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}"/>
                            <Setter TargetName="bg" Property="BorderBrush" Value="{StaticResource TextColorDisabled}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                <Setter Property="CornerRadius" Value="6"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="ProgressBar" x:Key="PlayerTimer">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{Binding TimerEnabled, Converter={StaticResource ProgressBarBorderBrushConverter}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Value" Value="{Binding Time}"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="{Binding OriginalTime}"/>
    </Style>

    <!--#region ComboBox Template -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{StaticResource BgColorLight}"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
            <!--<Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#FF3F3F3F" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,1,0" />-->
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Margin="0 0 8 0"
                  Fill="{StaticResource BorderColor}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="6,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="{StaticResource BgColorLight}"
                            Foreground="{StaticResource TextColor}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False" 
                            Width="{TemplateBinding Width}"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{StaticResource BgColorLight}"

                                BorderThickness="1"
                                BorderBrush="{StaticResource BorderColor}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Hidden">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource TextColorDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
        <Setter Property="Padding" Value="4 8"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                            Padding="{TemplateBinding Padding}"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BgColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BgColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>